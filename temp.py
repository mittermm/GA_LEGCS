from gen_networks.utils import town_list
from gen_networks.gen_network import graph_to_edge_csv
from gen_networks.csv2xml import csv_to_edg_xml
from config.run_simulation import run_simulation
import networkx as nx
import os

graph = nx.MultiDiGraph()
for i in range(len(town_list)):
    graph.add_node(i)

graph.add_edge(0,31)
graph.add_edge(31,0)
graph.add_edge(31,30)
graph.add_edge(30,31)
graph.add_edge(30,28)
graph.add_edge(28,30)
graph.add_edge(28,6)
graph.add_edge(6,28)
graph.add_edge(6,12)
graph.add_edge(12,6)
graph.add_edge(12,17)
graph.add_edge(17,12)
graph.add_edge(17,5)
graph.add_edge(5,17)
graph.add_edge(5,11)
graph.add_edge(11,5)
graph.add_edge(11,20)
graph.add_edge(20,11)
graph.add_edge(20,25)
graph.add_edge(25,20)
graph.add_edge(25,8)
graph.add_edge(8,25)
graph.add_edge(8,7)
graph.add_edge(7,8)
graph.add_edge(1,7)
graph.add_edge(7,1)
graph.add_edge(1,9)
graph.add_edge(9,1)
graph.add_edge(9,19)
graph.add_edge(19,9)
graph.add_edge(19,0)
graph.add_edge(0,19)
graph.add_edge(26,28)
graph.add_edge(28,26)
graph.add_edge(26,17)
graph.add_edge(17,26)
graph.add_edge(26,6)
graph.add_edge(6,26)
graph.add_edge(26,14)
graph.add_edge(14,26)
graph.add_edge(17,14)
graph.add_edge(14,17)
graph.add_edge(30,14)
graph.add_edge(14,30)
graph.add_edge(3,14)
graph.add_edge(14,3)
graph.add_edge(3,15)
graph.add_edge(15,3)
graph.add_edge(3,13)
graph.add_edge(13,3)
graph.add_edge(17,15)
graph.add_edge(15,17)
graph.add_edge(13,15)
graph.add_edge(15,13)
graph.add_edge(23,15)
graph.add_edge(15,23)
graph.add_edge(13,0)
graph.add_edge(0,13)
graph.add_edge(13,23)
graph.add_edge(23,13)
graph.add_edge(23,0)
graph.add_edge(0,23)
graph.add_edge(23,29)
graph.add_edge(29,23)
graph.add_edge(0,29)
graph.add_edge(29,0)
graph.add_edge(11,29)
graph.add_edge(29,11)
graph.add_edge(24,29)
graph.add_edge(29,24)
graph.add_edge(24,11)
graph.add_edge(11,24)
graph.add_edge(24,20)
graph.add_edge(20,24)
graph.add_edge(24,18)
graph.add_edge(18,24)
graph.add_edge(29,18)
graph.add_edge(18,29)
graph.add_edge(21,18)
graph.add_edge(18,21)
graph.add_edge(21,0)
graph.add_edge(0,21)
graph.add_edge(21,19)
graph.add_edge(19,21)
graph.add_edge(16,18)
graph.add_edge(18,16)
graph.add_edge(16,25)
graph.add_edge(25,16)
graph.add_edge(16,4)
graph.add_edge(4,16)
graph.add_edge(4,19)
graph.add_edge(19,4)
graph.add_edge(22,4)
graph.add_edge(4,22)
graph.add_edge(22,19)
graph.add_edge(19,22)
graph.add_edge(22,10)
graph.add_edge(10,22)
graph.add_edge(22,2)
graph.add_edge(2,22)
graph.add_edge(25,10)
graph.add_edge(10,25)
graph.add_edge(2,10)
graph.add_edge(10,2)
graph.add_edge(27,10)
graph.add_edge(10,27)
graph.add_edge(2,9)
graph.add_edge(9,2)
graph.add_edge(2,1)
graph.add_edge(1,2)
graph.add_edge(27,7)
graph.add_edge(7,27)
graph.add_edge(0,6)
graph.add_edge(6,0)
graph.add_edge(17,0)
graph.add_edge(0,17)
graph.add_edge(17,6)
graph.add_edge(6,17)
graph.add_edge(9,0)
graph.add_edge(0,9)
graph.add_edge(11,0)
graph.add_edge(0,11)
graph.add_edge(7,0)
graph.add_edge(0,7)

assert nx.is_strongly_connected(graph)
print(graph)

graph_to_edge_csv(graph, "temp.csv")
csv_to_edg_xml("temp.csv", "config/workspace/edg.xml")

command = "netconvert --node-files=config/workspace/nod.xml --edge-files=config/workspace/edg.xml --output-file=config/workspace/current_network.net.xml"
os.system(command)

avg_distance, avg_speed = run_simulation("config/workspace/base.sumo.cfg")
print("network temp"
    + "\n\taverage distance: " + str(avg_distance)
    + "\n\taverage speed:    " + str(avg_speed))

time = avg_distance * avg_speed
print(time)
